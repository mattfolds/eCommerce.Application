/**
 * Class: RegisterPanel
 * 
 * Purpose:
 * Creates the sign in panel which displays the form for sign-in
 * 
 * Change Log:
 * Matt Folds 10/20/12 - Initial Development
 * 
 */
package ecommerce;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.swing.JOptionPane;

/**
 *
 * @author Matt
 */
public class RegisterPanel extends javax.swing.JPanel {

    /**
     * Creates new form RegisterPanel
     */
    private EComData registerData;
    private User newUser;
    
    public RegisterPanel() {
        initComponents();
        
        registerData = ECommerce.myData;
        
        okBtn.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                register();
            }
        });
        
        //Handle cancle button click
        cancelBtn.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                HeaderPanel.closeRegisterForm();
            }
        });
    }
    
        /**
     * Method to register the new user when the OK button is clicked
     * PreCondition: User is not registered
     * PostCondition: User is registered, if fails specific error is prompted to
     * the user.
     */
    private void register()
    {
        newUser = new User();
        
        if(emailTxt.getText().equals("") || passwordTxt.getText().equals("") ||
                password2Txt.getText().equals("") || 
                passwordHintTxt.getText().equals("") || 
                fNameTxt.getText().equals("") ||
                lNameTxt.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please fill in all fields"
                    + " before submiting the form", "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            if(validateEmail(emailTxt.getText()))
            {
                newUser.setEmail(emailTxt.getText());
            }
            else
            {
                JOptionPane.showMessageDialog(null, "The email address is not"
                        + "valid, Please re-enter", "Error",
                    JOptionPane.ERROR_MESSAGE);
                return;
            }
            if(passwordTxt.getText().equals(password2Txt.getText()))
            {
                newUser.setPassword(passwordTxt.getText());
            }
            else
            {
                JOptionPane.showMessageDialog(null, "The passwords do not match"
                        , "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            newUser.setPasswordHint(passwordHintTxt.getText());
            newUser.setFName(fNameTxt.getText());
            newUser.setLName(lNameTxt.getText());
            
            try
            {
                registerData.writeRecord(newUser, "user");
                
                HeaderPanel.closeRegisterForm(newUser);
            }
            catch(EComException e)
            {
                JOptionPane.showMessageDialog(null, e.getMessage()
                        , "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }
    
    /**
     * Method to validate the users e-mail meets specific criteria
     * PreCondition: Need to validate an e-mail address for correctness
     * PostCondition: Validation complete and results returned in boolean
     * @param email String of the e-mail to validate
     * @return True if the e-mail is valid false if not
     */
    public boolean validateEmail(String email)
    {
        boolean result = true;
        try {
           InternetAddress emailAddr = new InternetAddress(email);
           emailAddr.validate();
        } catch (AddressException ex) {
           result = false;
        }
        return result;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        titleLbl = new javax.swing.JLabel();
        emailLbl = new javax.swing.JLabel();
        passwordLbl = new javax.swing.JLabel();
        Password2Lbl = new javax.swing.JLabel();
        PasswordHintLbl = new javax.swing.JLabel();
        fNameLbl = new javax.swing.JLabel();
        emailTxt = new javax.swing.JTextField();
        passwordTxt = new javax.swing.JTextField();
        password2Txt = new javax.swing.JTextField();
        passwordHintTxt = new javax.swing.JTextField();
        fNameTxt = new javax.swing.JTextField();
        lNameTxt = new javax.swing.JTextField();
        lNameLbl = new javax.swing.JLabel();
        javax.swing.JLabel errorLbl = new javax.swing.JLabel();

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        okBtn.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        okBtn.setText("OK");

        cancelBtn.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cancelBtn.setText("Cancel");

        titleLbl.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        titleLbl.setText("User Registration Form");

        emailLbl.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        emailLbl.setText("Email:");

        passwordLbl.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        passwordLbl.setText("Password:");

        Password2Lbl.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        Password2Lbl.setText("Confirm Password:");

        PasswordHintLbl.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        PasswordHintLbl.setText("Password Hint");
        PasswordHintLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        fNameLbl.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        fNameLbl.setText("First Name:");
        fNameLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        emailTxt.setColumns(20);
        emailTxt.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        emailTxt.setToolTipText("");

        passwordTxt.setColumns(20);
        passwordTxt.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        passwordTxt.setToolTipText("");

        password2Txt.setColumns(20);
        password2Txt.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        password2Txt.setToolTipText("");

        passwordHintTxt.setColumns(20);
        passwordHintTxt.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        passwordHintTxt.setToolTipText("");

        fNameTxt.setColumns(20);
        fNameTxt.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        fNameTxt.setToolTipText("");

        lNameTxt.setColumns(20);
        lNameTxt.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lNameTxt.setToolTipText("");

        lNameLbl.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lNameLbl.setText("Last Name:");
        lNameLbl.setToolTipText("");
        lNameLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        errorLbl.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        errorLbl.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PasswordHintLbl)
                            .addComponent(lNameLbl)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Password2Lbl)
                                        .addComponent(passwordLbl)
                                        .addComponent(fNameLbl))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(fNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(passwordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(password2Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(passwordHintTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(okBtn)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cancelBtn))))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(emailLbl)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(emailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(errorLbl)))
                .addContainerGap(98, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(titleLbl)
                .addGap(108, 108, 108))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(titleLbl)
                .addGap(18, 18, 18)
                .addComponent(errorLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailLbl)
                    .addComponent(emailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLbl)
                    .addComponent(passwordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Password2Lbl)
                    .addComponent(password2Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PasswordHintLbl)
                    .addComponent(passwordHintTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fNameLbl)
                    .addComponent(fNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lNameLbl)
                    .addComponent(lNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okBtn)
                    .addComponent(cancelBtn))
                .addGap(31, 31, 31))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Password2Lbl;
    private javax.swing.JLabel PasswordHintLbl;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JLabel emailLbl;
    private javax.swing.JTextField emailTxt;
    private javax.swing.JLabel fNameLbl;
    private javax.swing.JTextField fNameTxt;
    private javax.swing.JLabel lNameLbl;
    private javax.swing.JTextField lNameTxt;
    private javax.swing.JButton okBtn;
    private javax.swing.JTextField password2Txt;
    private javax.swing.JTextField passwordHintTxt;
    private javax.swing.JLabel passwordLbl;
    private javax.swing.JTextField passwordTxt;
    private javax.swing.JLabel titleLbl;
    // End of variables declaration//GEN-END:variables
}
