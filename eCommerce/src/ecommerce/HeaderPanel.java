/**
 * Class: HeaderPanel
 * 
 * Purpose:
 * Creates the header panel which displays the customer logo,
 * register and sign-in controls.  Also host the text box for searching and
 * button to take the user to their cart.
 * 
 * Change Log:
 * Matt Folds 10/18/12 - Initial Development
 * 
 * Matt Folds 10/20/12 - Added several methods to support sign-in, sign-out,
 * and registering new users.
 * 
 */
package ecommerce;

import java.awt.event.*;
import javax.swing.*;

public class HeaderPanel extends JPanel {

    
    private static RegisterPanel register;
    
    /**
     * Constructor to build the controls for the panel for displaying on the ui
     */
    public HeaderPanel() {
        initComponents();
        
                /**
         * ActionListener for the registerButton that calls displayRegisterForm
         */
        registerButton.addActionListener(new ActionListener()
        {
            @Override
            public void actionPerformed(ActionEvent e)
            {
                displayRegisterForm();
            }
        });
        
        /**
         * ActionListener for sign-in / sign-out button calls displaySignInForm
         * if there is no one currently signed in otherwise userSignOut is 
         * called.
         */
        signInOutButton.addActionListener(new ActionListener()
        {
            @Override
            public void actionPerformed(ActionEvent e)
            {
                if(signInOutButton.getText().equals("Sign In"))
                {
                    displaySignInForm();
                }
                else
                {
                    userSignOut();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logoLabel = new javax.swing.JLabel();
        registerButton = new javax.swing.JButton();
        signInOutButton = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        cartButton = new javax.swing.JButton();

        logoLabel.setFont(new java.awt.Font("Cooper Black", 1, 12)); // NOI18N
        logoLabel.setText("The Guys");

        registerButton.setText("Register");

        signInOutButton.setText("Sign In");
        signInOutButton.setToolTipText("");

        searchField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        searchField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        searchButton.setText("Search");

        cartButton.setText("Cart");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(registerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(signInOutButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchField, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cartButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cartButton, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(registerButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(signInOutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cartButton;
    private javax.swing.JLabel logoLabel;
    public static javax.swing.JButton registerButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchField;
    public static javax.swing.JButton signInOutButton;
    // End of variables declaration//GEN-END:variables

/**
     * Method called by SignInOutButton when clicked and a user is not currently
     * signed in.  The method displays the SignInPanel for the user to enter
     * their credentials
     * PreCondition: SignIn Form is not displayed
     * PostCondition: SignIn Form is displayed to user
     */
    private static void displaySignInForm()
    {
        signInOutButton.setEnabled(false);
        registerButton.setEnabled(false);
        ECommerce.currentUser = null;
        ECommerce.signInPanel1.clearForm();
        ECommerce.signInPanel1.setVisible(true);
    }
    
    /**
     * Method called by SignInPanel to close the SignIn Form when the user is
     * presses the cancel key.
     * PreCondition: Request to close the SignIn form
     * PostCondition: SignIn Form is closed
     */
    public static void closeSignInForm()
    {
        signInOutButton.setEnabled(true);
        registerButton.setEnabled(true);
        ECommerce.signInPanel1.setVisible(false);  
    }
    
    /**
     * Method called by SignInPanel to close the SignInForm when the user is
     * validated.  This method is also responsible to setting the global
     * variable for the current user that is signed in.
     * PreCondition: User is validated close the form
     * PostCondition: SignIn Form is closed and current user is set
     * @param myUser Instance of User class of the current user signed in
     */
    public static void closeSignInForm(User myUser)
    {
        signInOutButton.setEnabled(true);
        registerButton.setEnabled(false);        
        ECommerce.currentUser = myUser;
        
        if (myUser.getAdmin().equals("true"))
        {
            ECommerce.enableAdmin();
        }
        
        ECommerce.signInPanel1.setVisible(false); 
        
        userSignIn();        
    }
     
    /**
     * Method called by registerButton ActionListener to display the new user 
     * register form.
     * PreCondition: New user register Form is not displayed
     * PostCondition: New user register Form is displayed to user
     */   
    private void displayRegisterForm()
    {
        signInOutButton.setEnabled(false);
        registerButton.setEnabled(false);        
        ECommerce.currentUser = null;
        ECommerce.registerPanel1.setVisible(true);
    }
    
    /**
     * Method called by SignInPanel to close the new user 
     * register form when cancel button is clicked
     * PreCondition: New user register Form is canceled
     * PostCondition: New user register Form is closed
     */ 
    public static void closeRegisterForm()
    {
        signInOutButton.setEnabled(true);
        registerButton.setEnabled(true);
        ECommerce.registerPanel1.setVisible(false);
    }    
    
    /**
     * Method called by SignInPanel to close the new user register form when ok
     * button is clicked and to call user SignIn method
     * PreCondition: New user register Form is validated current user is set
     * PostCondition: New user register Form is closed
     * @param newUser Instance of User class of the newly registered user
     */ 
    public static void closeRegisterForm(User newUser)
    {
        
        signInOutButton.setEnabled(true);
        registerButton.setEnabled(false);        
        ECommerce.currentUser = newUser;
        
        ECommerce.registerPanel1.setVisible(false);
        
        userSignIn();
    }
    
    /**
     * Method called by closeSignInForm and closeRegisterForm to change the text
     * of the sign-in button to sign-out
     * PreCondition: User signed in
     * PostCondition: Change SignIn button text to sign out
     */     
    private static void userSignIn()
    {
        signInOutButton.setText("Sign Out");
    }

    /**
     * Method called by SignInOutButton when clicked and a user is signed in.
     * The method clears the currentUser GLOBAL variable and sets text on the
     * sign-out button to sign-in.
     * PreCondition: User has signed out
     * PostCondition: Change SignIn button text to sign in null current user
     */  
    private static void userSignOut()
    {
        ECommerce.currentUser = null;
        registerButton.setEnabled(true);        
        signInOutButton.setText("Sign In");
        ECommerce.signout();
    }
    
}

